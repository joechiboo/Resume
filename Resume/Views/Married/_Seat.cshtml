@helper circle(int id, int cx, int cy) {
    @:<circle id="@id" cx="@cx" cy="@cy" r="20" stroke="black" stroke-width="3" fill="none" />
    if (id >= 10 && id < 100)
    {
        cx -= 5;
    }
    else if (id >= 100)
    {
        cx -= 10;
    }
    @:<text x="@(cx - 5)" y="@(cy + 4)" fill="black">@id</text>
}

<div role="main" class="ui-content">
    @*<span>※目前桌子排列尚不準確。</span>*@
    <br/>
    <span id="tableText"></span>
    <input type="hidden" id="txt">

    <svg height="420" width="300">
        @*舞台*@
        <rect x="100" y="10" width="130" height="30"
              style="fill:lightgray;stroke-width:2;stroke:rgb(0,0,0)" />
        <text x="150" y="30" fill="black">舞台</text>
        @*門*@
        <rect x="265" y="260" width="30" height="60"
              style="fill:lightgray;stroke-width:2;stroke:rgb(0,0,0)" />
        <text x="272" y="292" fill="black">門</text>


        @{
            var column = 7;     // 幾行
            var row = 9;        // 幾列
            var table = 31;     // 幾桌
            var tables = new int[] { 4,
                                     2, 3, 1, 5,
                                     6,  7,  8,  9,  10, 11,
                                     12, 13, 14, 15, 16, 17,
                                     18, 19, 20, 21, 22, 23,
                                     24, 303, 26, 27, 28, 29,
                                     30, 31
                                    };

            var t = 1;
            for (var j = 1; j <= row; j++)
            {
                switch (j)
                {
                    case 1:
                        var cx = 30 + (40 * (7 - 1));
                        var cy = 30 + (40 * (1 - 1));

                        @circle(tables[t - 1], cx, cy)
                        t++;
                        continue;
                    case 2:
                        for (var i = 1; i <= column; i+=2)
                        {
                            cx = 30 + (40 * (i - 1));
                            cy = 30 + (40 * (j - 1));

                            if (t <= table)
                            {
                                @circle(tables[t - 1], cx, cy)
                            }

                            t++;
                        }
                        continue;
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                        for (var i = 1; i <= column; i++)
                        {
                            if (i == 5)
                            {
                                continue;
                            }

                            cx = 30 + (40 * (i - 1));
                            cy = 30 + (40 * (j - 1));

                            if (t <= table)
                            {
                                @circle(tables[t - 1], cx, cy)
                            }

                            t++;
                        }
                        continue;
                    // 第七、八排空下
                    case 7:
                    case 8:
                        continue;
                    case 9:
                        for (var i = 6; i <= column; i++)
                        {
                            cx = 30 + (40 * (i - 1));
                            cy = 30 + (40 * (j - 1));

                            if (t <= table)
                            {
                                @circle(tables[t - 1], cx, cy)
                            }

                            t++;
                        }
                        continue;
                    default:
                        break;
                }
            }
        }
    </svg>
</div>

<script>
    var c = 0
    var t
    var length = 33;
    var step = 10;

    function Ready() {
        $("circle").hide(1000);
        $("text").hide(1000);

        $("circle").show(1000);
        $("text").show(1000);

        length = $("circle").size();
    }

    function Go() {
        timedCount();
    }

    function setStep(ms) {
        step = ms;
    }

    function timedCount() {
        $("circle[fill='red']").attr("fill", "none");
        $("circle").eq(c).attr("fill", "red");

        document.getElementById('txt').value = c
        c = c + 1

        t = setTimeout("timedCount()", step)

        if (c >= length) {
            c = 0;
        }
    }

    function Stop() {
        clearTimeout(t);

        var table = $("circle").eq(c - 1).attr("id");
        console.info("恭喜第 " + table + " 桌得獎。");
    }

    function Filter() {
        $.ajax({
            url: "/api/Tables",
            async: false,
            success: function (result) {
                $(result).each(function (i, item) {
                    $("#" + item).attr("stroke", "red");
                });
            }});

        $("circle[stroke='black']").remove();

        Ready();
    }
</script>